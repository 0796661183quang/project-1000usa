/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.poly.ui;

import edu.poly.Helper.databaseHelper;
import edu.poly.Helper.notificationError;
import edu.poly.object.modelHopDong;
import edu.poly.object.modelTien;
import edu.poly.objectDAO.editHopDongDao;
import edu.poly.ui.Print.hopDongPrint;
import java.awt.event.ActionEvent;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.Duration;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.logging.SimpleFormatter;
import javax.swing.DefaultListModel;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.ListModel;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.hssf.record.chart.EndRecord;
import org.apache.poi.ss.formula.functions.Today;

/**
 *
 * @author dinh
 */
public class addHopDongPanel extends javax.swing.JPanel {

    /**
     * Creates new form addHopDong
     */
    public addHopDongPanel() {
        initComponents();
        editHopDongDao.setSoLuongXe();
        loadCBX("LOAIXE", cbxMaLoaiXe);
//        loadCBX("PHUKIEN", cbxMaPK);
        loadCBX("KHACHHANG", cbxSoCMND);
        loadListBoxSanSang();
        loadDataTable();
        setEnabledTextFieldOFF();
        setEnabledEventOFF();
        tblKh.setEnabled(false);
        editHopDongDao.setSoLuongXe();
        editHopDongDao.setSoLuongPK();
//        dpkNgayLap.setDate(Calendar.getInstance().getTime());
//        dpkTimeBatDauHD.setDate(Calendar.getInstance().getTime());
//        dpkTimeKetThucHD.setDate(Calendar.getInstance().getTime());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblKh = new javax.swing.JTable();
        CenterBottom = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        btnControlSave = new javax.swing.JButton();
        btnControlUpdete = new javax.swing.JButton();
        btnControlDel = new javax.swing.JButton();
        btnControlCancel = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btnControlSave1 = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        dpkNgayLap1 = new org.jdesktop.swingx.JXDatePicker();
        jLabel20 = new javax.swing.JLabel();
        cbxTinhTrangHD1 = new javax.swing.JComboBox<>();
        jLabel21 = new javax.swing.JLabel();
        cbxMaLoaiXe1 = new javax.swing.JComboBox<>();
        cbxSoCMND1 = new javax.swing.JComboBox<>();
        jLabel22 = new javax.swing.JLabel();
        Left = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtMaHD = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        dpkNgayLap = new org.jdesktop.swingx.JXDatePicker();
        jLabel4 = new javax.swing.JLabel();
        cbxSoCMND = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        dpkTimeBatDauHD = new org.jdesktop.swingx.JXDatePicker();
        jLabel6 = new javax.swing.JLabel();
        dpkTimeKetThucHD = new org.jdesktop.swingx.JXDatePicker();
        jLabel7 = new javax.swing.JLabel();
        txtDiemNhanXe = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtDiemTraXe = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tareaGhiChu = new javax.swing.JTextArea();
        jLabel18 = new javax.swing.JLabel();
        cbxTinhTrangHD = new javax.swing.JComboBox<>();
        Right = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        cbxMaLoaiXe = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        cbxDatCoc = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        txtMaTT = new javax.swing.JTextField();
        txtTienThueXe = new javax.swing.JTextField();
        txtTienSuaChua = new javax.swing.JTextField();
        txtTongTien = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        btnXeAdd = new javax.swing.JButton();
        btnEditXe = new javax.swing.JButton();
        btnDel = new javax.swing.JButton();
        btnAddReset1 = new javax.swing.JButton();
        printHD = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("HỢP ĐỒNG");

        tblKh.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        tblKh.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblKh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblKhMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblKh);

        CenterBottom.setPreferredSize(new java.awt.Dimension(88, 88));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Bảng điều khiển"));

        btnControlSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/poly/icon/icon/save-20.png"))); // NOI18N
        btnControlSave.setText("Thêm");
        btnControlSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnControlSaveActionPerformed(evt);
            }
        });

        btnControlUpdete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/poly/icon/icon/edit-20.png"))); // NOI18N
        btnControlUpdete.setText("Sửa");
        btnControlUpdete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnControlUpdeteActionPerformed(evt);
            }
        });

        btnControlDel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/poly/icon/icon/delete-20.png"))); // NOI18N
        btnControlDel.setText("Xóa");
        btnControlDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnControlDelActionPerformed(evt);
            }
        });

        btnControlCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/poly/icon/icon/huy-18.jpg"))); // NOI18N
        btnControlCancel.setText("Hủy");
        btnControlCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnControlCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnControlSave)
                .addGap(12, 12, 12)
                .addComponent(btnControlUpdete)
                .addGap(18, 18, 18)
                .addComponent(btnControlDel, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnControlCancel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnControlDel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnControlCancel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnControlUpdete, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnControlSave, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Tìm kiếm"));

        btnControlSave1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/poly/icon/icon/search1.jpg"))); // NOI18N
        btnControlSave1.setText("Tìm kiếm");
        btnControlSave1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnControlSave1ActionPerformed(evt);
            }
        });

        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel19.setText("Ngày Lập:");

        dpkNgayLap.setFormats("dd/MM/yyyy");

        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel20.setText("Tình Trạng Hợp Đồng:");

        cbxTinhTrangHD1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hoạt Động", "Kết Thúc" }));

        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel21.setText("Tên Loại Xe:");

        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel22.setText("Số CMND:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(dpkNgayLap1, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                    .addComponent(cbxTinhTrangHD1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbxMaLoaiXe1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel22)
                        .addGap(10, 10, 10)
                        .addComponent(cbxSoCMND1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(btnControlSave1)
                .addGap(33, 33, 33))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dpkNgayLap1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19)
                            .addComponent(jLabel21)
                            .addComponent(cbxMaLoaiXe1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(cbxTinhTrangHD1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22)
                            .addComponent(cbxSoCMND1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(btnControlSave1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout CenterBottomLayout = new javax.swing.GroupLayout(CenterBottom);
        CenterBottom.setLayout(CenterBottomLayout);
        CenterBottomLayout.setHorizontalGroup(
            CenterBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CenterBottomLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        CenterBottomLayout.setVerticalGroup(
            CenterBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CenterBottomLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CenterBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel1.getAccessibleContext().setAccessibleDescription("");
        jPanel2.getAccessibleContext().setAccessibleDescription("");

        Left.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Left.setPreferredSize(new java.awt.Dimension(200, 200));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Mã Hợp Đồng:");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Ngày Lập:");

        dpkNgayLap.setFormats("dd/MM/yyyy");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Số CMND:");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Thời gian bắt đầu HĐ:");

        dpkTimeBatDauHD.setFormats("dd/MM/yyyy");
        dpkTimeBatDauHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dpkTimeBatDauHDActionPerformed(evt);
            }
        });

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Thời gian kết thúc HĐ:");

        dpkTimeKetThucHD.setFormats("dd/MM/yyyy");
        dpkTimeKetThucHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dpkTimeKetThucHDActionPerformed(evt);
            }
        });

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Địa điểm nhận xe:");

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Địa điểm trả xe:");

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Ghi chú:");

        tareaGhiChu.setColumns(20);
        tareaGhiChu.setRows(5);
        jScrollPane1.setViewportView(tareaGhiChu);

        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel18.setText("Tình Trạng Hợp Đồng:");

        cbxTinhTrangHD.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hoạt Động", "Kết Thúc" }));

        javax.swing.GroupLayout LeftLayout = new javax.swing.GroupLayout(Left);
        Left.setLayout(LeftLayout);
        LeftLayout.setHorizontalGroup(
            LeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LeftLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(LeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(LeftLayout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(10, 10, 10)
                        .addComponent(cbxTinhTrangHD, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(LeftLayout.createSequentialGroup()
                        .addGroup(LeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel3))
                        .addGroup(LeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(LeftLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(LeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtMaHD)
                                    .addComponent(dpkNgayLap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbxSoCMND, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(LeftLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(dpkTimeKetThucHD, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LeftLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(LeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDiemNhanXe, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtDiemTraXe, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(LeftLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(LeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dpkTimeBatDauHD, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        LeftLayout.setVerticalGroup(
            LeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LeftLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(LeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMaHD))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(LeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dpkNgayLap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(LeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cbxSoCMND, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(LeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(dpkTimeBatDauHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(LeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(dpkTimeKetThucHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(LeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtDiemNhanXe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(LeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtDiemTraXe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(LeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(LeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(cbxTinhTrangHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        Right.setPreferredSize(new java.awt.Dimension(200, 200));

        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel15.setText("Tiền Sửa Chửa:");

        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel17.setText("Tên Loại Phụ Kiện:");

        jScrollPane3.setViewportView(jList1);

        jButton2.setText(">>");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setText("<<");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jScrollPane4.setViewportView(jList2);

        cbxMaLoaiXe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxMaLoaiXeActionPerformed(evt);
            }
        });

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Tên Loại Xe:");

        cbxDatCoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tien", "Xe may" }));

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("Đặt cọc:");

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Mã Thanh Toán:");

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("Tiền Thuê Xe:");

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText("Tổng Tiền:");

        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel23.setText("VND");

        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel24.setText("VND");

        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel25.setText("VND");

        javax.swing.GroupLayout RightLayout = new javax.swing.GroupLayout(Right);
        Right.setLayout(RightLayout);
        RightLayout.setHorizontalGroup(
            RightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RightLayout.createSequentialGroup()
                .addGroup(RightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(RightLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(RightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(RightLayout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(RightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton2)
                                    .addComponent(jButton1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(RightLayout.createSequentialGroup()
                                .addGroup(RightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(RightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cbxDatCoc, 0, 208, Short.MAX_VALUE)
                                    .addComponent(txtMaTT)
                                    .addComponent(txtTienThueXe)
                                    .addComponent(txtTienSuaChua)
                                    .addComponent(txtTongTien))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(RightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel25, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel23)
                                    .addComponent(jLabel24)))))
                    .addGroup(RightLayout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbxMaLoaiXe, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 48, Short.MAX_VALUE))
        );
        RightLayout.setVerticalGroup(
            RightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RightLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(RightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(cbxMaLoaiXe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(RightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(RightLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(RightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3)
                            .addComponent(jScrollPane4)
                            .addGroup(RightLayout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(11, 11, 11))
                    .addGroup(RightLayout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(RightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(cbxDatCoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(RightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtMaTT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(RightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtTienThueXe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(RightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txtTienSuaChua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(RightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(txtTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25))
                .addContainerGap())
        );

        btnXeAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/poly/icon/icon/save-20.png"))); // NOI18N
        btnXeAdd.setText("Thêm");
        btnXeAdd.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnXeAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXeAddActionPerformed(evt);
            }
        });

        btnEditXe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/poly/icon/icon/edit-20.png"))); // NOI18N
        btnEditXe.setText("Lưu thay đổi");
        btnEditXe.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnEditXe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditXeActionPerformed(evt);
            }
        });

        btnDel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/poly/icon/icon/delete-20.png"))); // NOI18N
        btnDel.setText("Xóa");
        btnDel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });

        btnAddReset1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/poly/icon/icon/reset-20.png"))); // NOI18N
        btnAddReset1.setText("Tạo mới");
        btnAddReset1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnAddReset1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddReset1ActionPerformed(evt);
            }
        });

        printHD.setText("In hợp đồng này");
        printHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printHDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(Left, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Right, javax.swing.GroupLayout.PREFERRED_SIZE, 558, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnXeAdd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnEditXe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAddReset1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(printHD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(16, 16, 16))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CenterBottom, javax.swing.GroupLayout.PREFERRED_SIZE, 1116, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CenterBottom, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(btnAddReset1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnXeAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEditXe)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(printHD))
                    .addComponent(Left, javax.swing.GroupLayout.PREFERRED_SIZE, 374, Short.MAX_VALUE)
                    .addComponent(Right, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE))
                .addGap(37, 37, 37))
        );

        Left.getAccessibleContext().setAccessibleParent(Left);
    }// </editor-fold>//GEN-END:initComponents
    String valueOfCBXTinhTrangHD;
    private void tblKhMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblKhMouseClicked
        editHopDongDao hd = new editHopDongDao();
        txtMaHD.setText(String.valueOf(tblKh.getValueAt(rowSelected(), 0)));
        try {
            dpkNgayLap.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(String.valueOf(tblKh.getValueAt(rowSelected(), 1))));
            dpkTimeBatDauHD.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(String.valueOf(tblKh.getValueAt(rowSelected(), 3))));
            dpkTimeKetThucHD.setDate(new SimpleDateFormat("yyyy-MM-dd").parse(String.valueOf(tblKh.getValueAt(rowSelected(), 4))));
        } catch (ParseException ex) {
            ex.printStackTrace();
        }
        cbxSoCMND.setSelectedItem(String.valueOf(tblKh.getValueAt(rowSelected(), 2)));
        txtDiemNhanXe.setText(String.valueOf(tblKh.getValueAt(rowSelected(), 5)));
        txtDiemTraXe.setText(String.valueOf(tblKh.getValueAt(rowSelected(), 6)));
        tareaGhiChu.setText(String.valueOf(tblKh.getValueAt(rowSelected(), 7)));
        cbxTinhTrangHD.setSelectedItem(String.valueOf(tblKh.getValueAt(rowSelected(), 8)));
        valueOfCBXTinhTrangHD = String.valueOf(tblKh.getValueAt(rowSelected(), 8));
//        System.out.println("in Ten loai xe: "+hd.convertMaLoaiXeToLoaiXe(String.valueOf(tblKh.getValueAt(rowSelected(), 9))));
//        cbxMaLoaiXe.setSelectedItem(hd.convertMaLoaiXeToLoaiXe(String.valueOf(tblKh.getValueAt(rowSelected(), 9))));
        loadCBX("LOAIXE", cbxMaLoaiXe);
//        System.out.println("kq: "+checkNullCBX(cbxMaLoaiXe.getItemAt(i)));
//        System.out.println("kq compare: "+compareItemOfCBX());
        if (compareItemOfCBX()) {
            cbxMaLoaiXe.addItem(hd.convertMaLoaiXeToLoaiXe(String.valueOf(tblKh.getValueAt(rowSelected(), 9))));
        }

        cbxMaLoaiXe.setSelectedItem(hd.convertMaLoaiXeToLoaiXe(String.valueOf(tblKh.getValueAt(rowSelected(), 9))));
//        cbxMaPK.setSelectedItem(String.valueOf(tblKh.getValueAt(rowSelected(), 10)));
        cbxDatCoc.setSelectedItem(String.valueOf(tblKh.getValueAt(rowSelected(), 12)));
        loadListBoxDangChoThue(String.valueOf(tblKh.getValueAt(rowSelected(), 10)));
//        cbxTinhTrangHD.setSelectedItem(ABORT);
        txtMaTT.setText(String.valueOf(tblKh.getValueAt(rowSelected(), 11)));
        txtTienThueXe.setText(String.valueOf(tblKh.getValueAt(rowSelected(), 13)));
        txtTienSuaChua.setText(String.valueOf(tblKh.getValueAt(rowSelected(), 14)));
        txtTongTien.setText(String.valueOf(tblKh.getValueAt(rowSelected(), 15)));
    }//GEN-LAST:event_tblKhMouseClicked
    private void loadListBoxDangChoThue(String strMaLoaiPK) {
        DefaultListModel listModel2 = new DefaultListModel();
        String[] maLoaiPK = strMaLoaiPK.split(",");
//        System.out.println("do dai: "+maLoaiPK.length);
        for (int i = 0; i < maLoaiPK.length; i++) {
//            System.out.println("ma loai PK in selected"+i+" table: " + maLoaiPK[i]);
            try {
                String sql = "select TenLoaiPK from LOAIPHUKIEN where MaLoaiPK = '" + maLoaiPK[i].trim() + "'";
                Connection con = databaseHelper.openConnection();
                Statement sttm = con.createStatement();
                ResultSet rs = sttm.executeQuery(sql);
                while (rs.next()) {
                    listModel2.addElement(rs.getString(1));
                }

            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
        jList2.setModel(listModel2);
        System.out.println("Line 714");
    }

    private boolean compareItemOfCBX() {
        boolean kq = true;
        editHopDongDao hd = new editHopDongDao();
        int i = 0;
        for (; checkNullCBX(cbxMaLoaiXe.getItemAt(i)); i++) {
//            System.out.println("ten loai xe cbx "+i+" la: "+cbxMaLoaiXe.getItemAt(i));
            if (cbxMaLoaiXe.getItemAt(i).equals(hd.convertMaLoaiXeToLoaiXe(String.valueOf(tblKh.getValueAt(rowSelected(), 9))))) {
                kq = false;
                break;
            }
        }
        return kq;
    }

    private boolean checkNullCBX(String valueItem) {
        boolean kq = false;
        if (valueItem != null) {
            kq = true;
        }
        return kq;
    }
    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
        editHopDongDao editHD = new editHopDongDao();
        modelHopDong hd = new modelHopDong();
        hd.setMaHD(Integer.parseInt(txtMaHD.getText()));

        modelTien t = new modelTien();
        t.setMaTT(txtMaTT.getText());
        if (editHD.xoaHopDong(hd, t) == 1) {
            JOptionPane.showMessageDialog(this, "Xoa Hop Dong thanh cong");
            editHopDongDao.setSoLuongXe();
            editHopDongDao.setSoLuongPK();
            loadListBoxSanSang();
            tblKh.setEnabled(false);
            setEnabledTextFieldOFF();
            setEnabledControlON();
            setEnabledEventOFF();
            btnResetActionPerformed(evt);
            btnAddReset1.setEnabled(false);
            btnXeAdd.setEnabled(false);
        } else {
            JOptionPane.showMessageDialog(this, "Xoa Hop Dong khong thanh cong");
        }

        loadDataTable();
    }//GEN-LAST:event_btnDelActionPerformed

    private void btnEditXeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditXeActionPerformed
        if (capNhatHopDong() == 1) {
            loadDataTable();
            editHopDongDao.setSoLuongXe();
            editHopDongDao.setSoLuongPK();
            loadListBoxSanSang();
            tblKh.setEnabled(false);
            setEnabledTextFieldOFF();
            setEnabledControlON();
            setEnabledEventOFF();
            btnResetActionPerformed(evt);
            btnAddReset1.setEnabled(false);
            btnXeAdd.setEnabled(false);
            JOptionPane.showMessageDialog(this, "Cap nhat Hop Dong thanh cong!");
        } else
            JOptionPane.showMessageDialog(this, "Hay nhap day du cac field!");
    }//GEN-LAST:event_btnEditXeActionPerformed

    private void btnAddReset1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddReset1ActionPerformed
        txtMaHD.setText("");
        dpkNgayLap.setDate(Calendar.getInstance().getTime());
        dpkTimeBatDauHD.setDate(Calendar.getInstance().getTime());
        dpkTimeKetThucHD.setDate(Calendar.getInstance().getTime());
        cbxDatCoc.setSelectedIndex(0);
        cbxMaLoaiXe.setSelectedIndex(0);
        cbxTinhTrangHD.setSelectedIndex(0);
        txtDiemNhanXe.setText("");
        txtDiemTraXe.setText("");
        tareaGhiChu.setText("");
        txtMaTT.setText("");
        txtTienThueXe.setText("");
        txtTienSuaChua.setText("");
        txtTongTien.setText("");
        //        loadCBX("LOAIXE", cbxMaLoaiXe);
        //        loadCBX("PHUKIEN", cbxMaPK);
        //        loadCBX("KHACHHANG", cbxSoCMND);
    }//GEN-LAST:event_btnAddReset1ActionPerformed

    private void btnXeAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXeAddActionPerformed
//        if (btnXeAdd.getText() == "Thêm") {
//            txtMaHD.setText("");
//            dpkNgayLap.setDate(null);
//            dpkTimeBatDauHD.setDate(null);
//            dpkTimeKetThucHD.setDate(null);
//            txtDiemNhanXe.setText("");
//            txtDiemTraXe.setText("");
//            tareaGhiChu.setText("");
//            txtMaTT.setText("");
//            txtTienThueXe.setText("");
//            txtTienSuaChua.setText("");
//            txtTongTien.setText("");
//            btnXeAdd.setText("Lưu");
//            loadCBX("LOAIXE", cbxMaLoaiXe);
//            listModelPhuKienDangThue.removeAllElements();
//        } else if (btnXeAdd.getText() == "Lưu") {
        StringBuilder sb = new StringBuilder();
        notificationError.DataAvailable(txtDiemTraXe, sb, "Trường Địa Điểm Trả Xe không thể bỏ trống !");
        notificationError.DataAvailable(txtDiemNhanXe, sb, "Trường Địa Điểm Nhận Xe không thể bỏ trống !");

        // Hiển thị thông báo lỗi đã được đặt sẵn
        if (sb.length() > 0) {
            JOptionPane.showMessageDialog(this, sb.toString());
            return;
        }
        if (themHopDong() == 1) {
            tblKh.setEnabled(false);
            setEnabledTextFieldOFF();
            setEnabledControlON();
            setEnabledEventOFF();
            btnResetActionPerformed(evt);
            btnAddReset1.setEnabled(false);
            btnXeAdd.setEnabled(false);
            loadDataTable();
            JOptionPane.showMessageDialog(this, "Them Hop Dong thanh cong!");
            editHopDongDao.setSoLuongXe();
            editHopDongDao.setSoLuongPK();
            loadCBX("LOAIXE", cbxMaLoaiXe);
            loadListBoxSanSang();
        }
//        }
    }//GEN-LAST:event_btnXeAddActionPerformed
    DefaultListModel listModelPhuKienDangThue = new DefaultListModel();

    public void setEnabledTextFieldON() {
        txtMaHD.setEnabled(true);
        dpkNgayLap.setEnabled(true);
        cbxSoCMND.setEnabled(true);
        dpkTimeBatDauHD.setEnabled(true);
        dpkTimeKetThucHD.setEnabled(true);
        txtDiemNhanXe.setEnabled(true);
        txtDiemTraXe.setEnabled(true);
        tareaGhiChu.setEnabled(true);
        cbxTinhTrangHD.setEnabled(true);
        cbxMaLoaiXe.setEnabled(true);
        jList1.setEnabled(true);
        listModelPhuKienDangThue.removeAllElements();
        jList2.setModel(listModelPhuKienDangThue);
        jList2.setEnabled(true);
        cbxDatCoc.setEnabled(true);
        txtMaTT.setEnabled(true);
        txtTienThueXe.setEnabled(true);
        txtTienSuaChua.setEnabled(true);
        txtTongTien.setEnabled(true);
        jButton1.setEnabled(true);
        jButton2.setEnabled(true);
    }

    public void setEnabledTextFieldOFF() {
        txtMaHD.setEnabled(false);
        dpkNgayLap.setEnabled(false);
        cbxSoCMND.setEnabled(false);
        dpkTimeBatDauHD.setEnabled(false);
        dpkTimeKetThucHD.setEnabled(false);
        txtDiemNhanXe.setEnabled(false);
        txtDiemTraXe.setEnabled(false);
        tareaGhiChu.setEnabled(false);
        cbxTinhTrangHD.setEnabled(false);
        cbxMaLoaiXe.setEnabled(false);
        jList1.setEnabled(false);
        jList2.setEnabled(false);
        cbxDatCoc.setEnabled(false);
        txtMaTT.setEnabled(false);
        txtTienThueXe.setEnabled(false);
        txtTienSuaChua.setEnabled(false);
        txtTongTien.setEnabled(false);
        jButton1.setEnabled(false);
        jButton2.setEnabled(false);
    }

    public void setEnabledEventON() {
        btnXeAdd.setEnabled(true);
        btnAddReset1.setEnabled(true);
        btnDel.setEnabled(true);
        btnEditXe.setEnabled(true);
        jButton1.setEnabled(true);
        jButton2.setEnabled(true);
    }

    public void setEnabledEventOFF() {
        btnXeAdd.setEnabled(false);
        btnAddReset1.setEnabled(false);
        btnDel.setEnabled(false);
        btnEditXe.setEnabled(false);
//        jButton1.setEnabled(false);
//        jButton2.setEnabled(false);
    }

    public void setEnabledControlON() {
        btnControlSave.setEnabled(true);
        btnControlDel.setEnabled(true);
        btnControlUpdete.setEnabled(true);
    }

    public void setEnabledControlOFF() {
        btnControlSave.setEnabled(false);
        btnControlDel.setEnabled(false);
        btnControlUpdete.setEnabled(false);
    }
    private void btnControlSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnControlSaveActionPerformed
        tblKh.setEnabled(false);
        setEnabledTextFieldON();
        setEnabledControlOFF();
        setEnabledEventOFF();
        btnResetActionPerformed(evt);
        btnAddReset1.setEnabled(true);
        btnXeAdd.setEnabled(true);
        cbxTinhTrangHD.setEnabled(false);
        txtMaHD.setText(String.valueOf((Integer.parseInt(tblKh.getValueAt(tblKh.getRowCount() - 1, 0).toString())) + 1));
        txtMaHD.setEnabled(false);
        txtMaTT.setText("TT" + String.valueOf((Integer.parseInt(tblKh.getValueAt(tblKh.getRowCount() - 1, 0).toString())) + 1));
        txtMaTT.setEnabled(false);
//        tinhTien();
//        System.out.println("last row: "+((Integer.parseInt(tblKh.getValueAt(tblKh.getRowCount()-1, 0).toString()))+1));
    }//GEN-LAST:event_btnControlSaveActionPerformed

    private void btnControlUpdeteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnControlUpdeteActionPerformed
        tblKh.setEnabled(true);
        setEnabledTextFieldON();
        setEnabledControlOFF();
        setEnabledEventOFF();
        btnEditXe.setEnabled(true);
        txtMaHD.setEnabled(false);
        txtMaTT.setEnabled(false);
        btnResetActionPerformed(evt);
    }//GEN-LAST:event_btnControlUpdeteActionPerformed

    private void btnControlDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnControlDelActionPerformed
        tblKh.setEnabled(true);
        setEnabledTextFieldON();
        setEnabledControlOFF();
        setEnabledEventOFF();
        btnDel.setEnabled(true);
        txtMaHD.setEnabled(false);
        txtMaTT.setEnabled(false);
        btnResetActionPerformed(evt);
    }//GEN-LAST:event_btnControlDelActionPerformed

    private void btnControlCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnControlCancelActionPerformed
        setEnabledEventOFF();
        setEnabledControlON();
        setEnabledTextFieldOFF();
        tblKh.setEnabled(false);
        btnResetActionPerformed(evt);
    }//GEN-LAST:event_btnControlCancelActionPerformed

    private void btnControlSave1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnControlSave1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnControlSave1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //        ArrayList<String> listIndexSelected = new ArrayList<>();
        //        for (int i = 0; i < jList2.gets; i++) {

        //        }
        DefaultListModel listModelPhuKienDangThue2 = (DefaultListModel) jList2.getModel();
        //        System.out.println("index list 2 remove: " + jList2.getSelectedIndex());
        //        System.out.println("value of listPKCT remove: " + listModelPhuKienDangThue.toString());
        listModelPhuKienDangThue2.remove(jList2.getSelectedIndex());
        //        jList2.setModel(listModelPhuKienDangThue);
        //        if (jList2.getSelectedIndex()!=-1) {
        //            listModelPhuKienDangThue.remove(jList2.getSelectedIndex());
        //        }
        //        jList2
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //        for (int i = 0; i < jList1.getModel().getSize(); i++) {

        if (soSanhItem2ListPhuKien()) {
            listModelPhuKienDangThue.addElement(jList1.getSelectedValue());
        }

        //        System.out.println("list value: " + jList1.getSelectedValue());
        //        }
        jList2.setModel(listModelPhuKienDangThue);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void dpkTimeBatDauHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dpkTimeBatDauHDActionPerformed
//        tinhTien();
    }//GEN-LAST:event_dpkTimeBatDauHDActionPerformed

    private void dpkTimeKetThucHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dpkTimeKetThucHDActionPerformed
//        tinhTien();
    }//GEN-LAST:event_dpkTimeKetThucHDActionPerformed

    private void cbxMaLoaiXeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxMaLoaiXeActionPerformed
//        tinhTien();
    }//GEN-LAST:event_cbxMaLoaiXeActionPerformed

    public static String maHD;
    public static String ngayLap;
    public static String soCMND;
    public static String TimeStartHD;
    public static String timeEndHD;
    public static String diaDiemNhan;
    public static String diaDiemTra;
    public static String ghiChu;
    public static String tinhTrang;
    public static String tenLoaiXe;
    public static String tenLoaiPK;
    public static String datCoc;
    public static String maThanhToan;
    public static String tienThue;
    public static String tienSuaChua;
    public static String tongTien;
    private void printHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printHDActionPerformed
        try {
            maHD = txtMaHD.getText();
            ngayLap = dpkNgayLap.getDate().toString();
            soCMND = cbxSoCMND.getSelectedItem().toString();
            TimeStartHD = dpkTimeBatDauHD.getDate().toString();
            timeEndHD = dpkTimeKetThucHD.getDate().toString();
            diaDiemNhan = txtDiemNhanXe.getText();
            diaDiemTra = txtDiemTraXe.getText();
            ghiChu = tareaGhiChu.getText();
            tinhTrang = cbxTinhTrangHD.getSelectedItem().toString();
            tenLoaiXe = cbxMaLoaiXe.getSelectedItem().toString();
            tenLoaiPK = jList2.getSelectedValue().toString();
            datCoc = cbxDatCoc.getSelectedItem().toString();
            maThanhToan = txtMaTT.getText();
            tienThue = txtTienThueXe.getText();
            tienSuaChua = txtTienSuaChua.getText();
            tongTien = txtTongTien.getText();
            
            hopDongPrint HDPrint = new hopDongPrint();
            HDPrint.setVisible(true);
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(this, "Dữ liệu chưa được đưa vào các trường. Vui lòng thêm và thử lại !");
         
        }
    }//GEN-LAST:event_printHDActionPerformed
    private boolean soSanhItem2ListPhuKien() {
        boolean kq = true;
        for (int i = 0; i < jList2.getModel().getSize(); i++) {
//            System.out.println("jlist2 [" + i + "]: " + jList2.getModel().getElementAt(i));
//            System.out.println(" selected jlist1: " + jList1.getSelectedValue());
//            System.out.println("\n");
            if (jList2.getModel().getElementAt(i).equals(jList1.getSelectedValue())) {
                kq = false;
            }
        }
        return kq;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel CenterBottom;
    private javax.swing.JPanel Left;
    private javax.swing.JPanel Right;
    private javax.swing.JButton btnAddReset1;
    private javax.swing.JButton btnControlCancel;
    private javax.swing.JButton btnControlDel;
    private javax.swing.JButton btnControlSave;
    private javax.swing.JButton btnControlSave1;
    private javax.swing.JButton btnControlUpdete;
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnEditXe;
    private javax.swing.JButton btnXeAdd;
    private javax.swing.JComboBox<String> cbxDatCoc;
    private javax.swing.JComboBox<String> cbxMaLoaiXe;
    private javax.swing.JComboBox<String> cbxMaLoaiXe1;
    private javax.swing.JComboBox<String> cbxSoCMND;
    private javax.swing.JComboBox<String> cbxSoCMND1;
    private javax.swing.JComboBox<String> cbxTinhTrangHD;
    private javax.swing.JComboBox<String> cbxTinhTrangHD1;
    private org.jdesktop.swingx.JXDatePicker dpkNgayLap;
    private org.jdesktop.swingx.JXDatePicker dpkNgayLap1;
    private org.jdesktop.swingx.JXDatePicker dpkTimeBatDauHD;
    private org.jdesktop.swingx.JXDatePicker dpkTimeKetThucHD;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton printHD;
    private javax.swing.JTextArea tareaGhiChu;
    private javax.swing.JTable tblKh;
    private javax.swing.JTextField txtDiemNhanXe;
    private javax.swing.JTextField txtDiemTraXe;
    private javax.swing.JTextField txtMaHD;
    private javax.swing.JTextField txtMaTT;
    private javax.swing.JTextField txtTienSuaChua;
    private javax.swing.JTextField txtTienThueXe;
    private javax.swing.JTextField txtTongTien;
    // End of variables declaration//GEN-END:variables

    private void loadCBX(String table, JComboBox cbx) {
        if (table == "LOAIXE") {
            String sql = "select * from " + table + " where SoLuong is not NULL";
            try {
                Connection con = databaseHelper.openConnection();
                Statement sttm = con.createStatement();
                ResultSet rs = sttm.executeQuery(sql);
                cbx.removeAllItems();
                while (rs.next()) {
                    cbx.addItem(rs.getString(2));
//                    System.out.println("combobox: " + rs.getString(1));
                }
                con.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            String sql = "select * from " + table + "";
            try {
                Connection con = databaseHelper.openConnection();
                Statement sttm = con.createStatement();
                ResultSet rs = sttm.executeQuery(sql);
                while (rs.next()) {
                    cbx.addItem(rs.getString(1));
                }
                con.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }
    int temp = 0;

    private int themHopDong() {
        try {
            java.util.Date utilDate1 = dpkNgayLap.getDate();
            java.sql.Date ngayLap = new java.sql.Date(utilDate1.getTime());
            java.util.Date utilDate2 = dpkTimeBatDauHD.getDate();
            java.sql.Date timeBatDauHD = new java.sql.Date(utilDate2.getTime());
            java.util.Date utilDate3 = dpkTimeKetThucHD.getDate();
            java.sql.Date timeKetThucHD = new java.sql.Date(utilDate3.getTime());
            LocalDate bd = LocalDate.parse(timeBatDauHD.toString(), DateTimeFormatter.ISO_LOCAL_DATE);
            LocalDate kt = LocalDate.parse(timeKetThucHD.toString(), DateTimeFormatter.ISO_LOCAL_DATE);
            LocalDate nl = LocalDate.parse(ngayLap.toString(), DateTimeFormatter.ISO_LOCAL_DATE);
            Duration truBDKT = Duration.between(bd.atStartOfDay(), kt.atStartOfDay());
            Duration truNLNow = Duration.between(LocalDate.now().atStartOfDay(), nl.atStartOfDay());
            Duration truBDNow = Duration.between(LocalDate.now().atStartOfDay(), bd.atStartOfDay());
            System.out.println("time BD: " + timeBatDauHD);
            System.out.println("time KT: " + timeKetThucHD);
            System.out.println("time now: " + LocalDate.now());
//            LocalDate bd = LocalDate.parse(timeBatDauHD.toString(), DateTimeFormatter.ISO_LOCAL_DATE);
//            LocalDate kt = LocalDate.parse(timeKetThucHD.toString(), DateTimeFormatter.ISO_LOCAL_DATE);
//            LocalDate nl = LocalDate.parse(ngayLap.toString(), DateTimeFormatter.ISO_LOCAL_DATE);
//            Duration truBDKT = Duration.between(bd.atStartOfDay(), kt.atStartOfDay());
//            Duration truNLNow = Duration.between(LocalDate.now().atStartOfDay(), nl.atStartOfDay());
//            Duration truBDNow = Duration.between(LocalDate.now().atStartOfDay(), bd.atStartOfDay());
            System.out.println("time KT - BD: " + truBDKT.toDays());
            System.out.println("time now - NL: " + truNLNow.toDays());
            System.out.println("time now - BF: " + truBDNow.toDays());

            editHopDongDao editHD = new editHopDongDao();
            modelTien t = new modelTien();
            t.setMaTT(txtMaTT.getText());
            t.setTienThueXe(Float.parseFloat(txtTienThueXe.getText()));
            if (txtTienSuaChua.getText().isEmpty()) {
                txtTienSuaChua.setText("0");
            }
            t.setTienSuaChua(Float.parseFloat(txtTienSuaChua.getText()));
            t.setTongTien(Float.parseFloat(txtTongTien.getText()));

            modelHopDong hd = new modelHopDong();
            hd.setMaHD(Integer.parseInt(txtMaHD.getText()));
            hd.setNgayLap((Date) ngayLap);
            hd.setSoCMND(Integer.parseInt(cbxSoCMND.getSelectedItem().toString()));
            hd.setThoiGianBatDauHD((Date) timeBatDauHD);
            hd.setThoiGianKetThucHD((Date) timeKetThucHD);
            hd.setDiaDiemNhanXe(txtDiemNhanXe.getText());
//            System.out.println("Dia diem nhan xe: " + txtDiemNhanXe.getText());
            hd.setDiaDiemTraXe(txtDiemTraXe.getText());
            hd.setGhiChu(tareaGhiChu.getText());
            hd.setMaLoaiXe(editHD.convertLoaiXeToMaLoaiXe(cbxMaLoaiXe.getSelectedItem().toString()));
//            System.out.println("List pk dang thue: " + listModelPhuKienDangThue.toString());
//            System.out.println("Ma List pk dang thue: " + editHD.convertLoaiPKToMaLoaiPK(listModelPhuKienDangThue));
            hd.setMaLoaiPK(editHD.convertLoaiPKToMaLoaiPK(listModelPhuKienDangThue).toString().replace('[', ' ').replace(']', ' ').trim());
            hd.setMaTT(txtMaTT.getText());
            hd.setDatCoc(cbxDatCoc.getSelectedItem().toString());
            hd.setTinhTrang(cbxTinhTrangHD.getSelectedItem().toString());

//            System.out.println("ngay HD: " + truBDKT.toDays());
            if (truNLNow.toDays() < 0) {
                JOptionPane.showMessageDialog(this, "Hãy nhập Ngày Lập Hợp Đồng lớn hơn Ngày hiện tại!");
            } else if (truBDNow.toDays() < 0) {
                JOptionPane.showMessageDialog(this, "Hãy nhập Ngày Bắt Đầu Hợp Đồng lớn hơn Ngày hiện tại!");
            } else if (truBDKT.toDays() < 0) {
                JOptionPane.showMessageDialog(this, "Hãy nhập Ngày Kết thúc Hợp Đồng lớn hơn Ngày Bắt đầu Hợp Đồng!");
            } else {
                editHD.insertHopDong(hd, t);
                temp = 1;
            }

        } catch (Exception e) {
            e.printStackTrace();
            temp = 0;
        }
        return temp;
    }

    private void loadDataTable() {
        try {
            DefaultTableModel model = new DefaultTableModel(new String[]{"Ma HD", "Ngay Lap", "so CMND", "Thoi gian bat dau HD", "Thoi gian ket thuc HD", "Dia diem nhan xe", "Dia diem tra xe", "Ghi chu", "Tinh Trang HD", "Ma loai xe", "Ma Loai PK", "Ma TT", "Dat coc", "Tien thue xe", "Tien sua chua", "Tong tien"}, 0) {
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };
            String sql = "select * from HOPDONG hd join TIEN t on hd.MaThanhToan=t.MaThanhToan";
            Statement st = databaseHelper.openConnection().createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                int maHD = rs.getInt(1);
                Date ngayLap = rs.getDate(2);
                int soCMND = rs.getInt(3);
                Date thoiGianBatDauHD = rs.getDate(4);
                Date thoiGianKetThucHD = rs.getDate(5);
                String diaDiemNhanXe = rs.getString(6);
                String diaDiemTraXe = rs.getString(7);
                String ghiChu1 = rs.getString(8);
                String maLoaiXe = rs.getString(9);
                String maLoaiPK = rs.getString(10);
                String maTT1 = rs.getString(11);
                String datCoc = rs.getString(12);
//                String maTT2 = rs.getString(13);
                String tinhTrangHD = rs.getString(13);
                float tienThueXe = rs.getFloat(15);
                float tienSuaChua = rs.getFloat(16);
                float tongTien = rs.getFloat(17);
//                String ghiChu2 = rs.getString(17);
                model.addRow(new Object[]{maHD, ngayLap, soCMND, thoiGianBatDauHD, thoiGianKetThucHD, diaDiemNhanXe, diaDiemTraXe, ghiChu1, tinhTrangHD, maLoaiXe, maLoaiPK, maTT1, datCoc, tienThueXe, tienSuaChua, tongTien});

            }
            tblKh.setModel(model);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private int rowSelected() {
        int row = tblKh.getSelectedRow();
        return row;
    }

    private int capNhatHopDong() {
        try {
            java.util.Date utilDate1 = dpkNgayLap.getDate();
            java.sql.Date ngayLap = new java.sql.Date(utilDate1.getTime());
            java.util.Date utilDate2 = dpkTimeBatDauHD.getDate();
            java.sql.Date timeBatDauHD = new java.sql.Date(utilDate2.getTime());
            java.util.Date utilDate3 = dpkTimeKetThucHD.getDate();
            java.sql.Date timeKetThucHD = new java.sql.Date(utilDate3.getTime());

            editHopDongDao editHD = new editHopDongDao();
            modelTien t = new modelTien();
            t.setMaTT(txtMaTT.getText());
            t.setTienThueXe(Float.parseFloat(txtTienThueXe.getText()));
            t.setTienSuaChua(Float.parseFloat(txtTienSuaChua.getText()));
            t.setTongTien(Float.parseFloat(txtTongTien.getText()));

            modelHopDong hd = new modelHopDong();
            hd.setMaHD(Integer.parseInt(txtMaHD.getText()));
            hd.setNgayLap((Date) ngayLap);
            hd.setSoCMND(Integer.parseInt(cbxSoCMND.getSelectedItem().toString()));
            hd.setThoiGianBatDauHD((Date) timeBatDauHD);
            hd.setThoiGianKetThucHD((Date) timeKetThucHD);
            hd.setDiaDiemNhanXe(txtDiemNhanXe.getText());
            hd.setDiaDiemTraXe(txtDiemTraXe.getText());
            hd.setGhiChu(tareaGhiChu.getText());
            hd.setMaLoaiXe(editHD.convertLoaiXeToMaLoaiXe(cbxMaLoaiXe.getSelectedItem().toString()));
//            hd.setMaLoaiPK(cbxMaPK.getSelectedItem().toString());
//            System.out.println("list PK dang thue in thay doi: " + jList2.getModel().toString());
            hd.setMaLoaiPK(editHD.convertLoaiPKToMaLoaiPK((DefaultListModel) jList2.getModel()).toString().replace('[', ' ').replace(']', ' ').trim());
            updateTinhTrangPKSauThayDoi();
            hd.setMaTT(txtMaTT.getText());
            hd.setDatCoc(cbxDatCoc.getSelectedItem().toString());
            hd.setTinhTrang(cbxTinhTrangHD.getSelectedItem().toString());

            editHD.updateHopDong(hd, t, valueOfCBXTinhTrangHD);
            temp = 1;

        } catch (Exception e) {
            e.printStackTrace();
            temp = 0;
        }
        return temp;
    }

    private void loadListBoxSanSang() {
        DefaultListModel listModel1 = new DefaultListModel();
        try {
            String sql = "select * from LOAIPHUKIEN where SoLuong is not NULL";
            Connection con = databaseHelper.openConnection();
            Statement sttm = con.createStatement();
            ResultSet rs = sttm.executeQuery(sql);
            while (rs.next()) {
                listModel1.addElement(rs.getString(2));
            }
            jList1.setModel(listModel1);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    private void updateTinhTrangPKSauThayDoi() {
        editHopDongDao editHD = new editHopDongDao();
//        System.out.println("in table: " + tblKh.getValueAt(rowSelected(), 10).toString());
//        System.out.println("in list dang cho thue: " + editHD.convertLoaiPKToMaLoaiPK((DefaultListModel) jList2.getModel()));
//        System.out.println("in list dang cho thue size: " + editHD.convertLoaiPKToMaLoaiPK((DefaultListModel) jList2.getModel()).size());
        try {
            String sql = "update PHUKIEN set MaHD=NULL, TinhTrangPK=N'Sẵn sàng' where MaHD=? and MaLoaiPK=?";
            Connection con = databaseHelper.openConnection();
            String maHD = String.valueOf(tblKh.getValueAt(rowSelected(), 0));
            PreparedStatement pstm = con.prepareStatement(sql);
            pstm.setString(1, maHD);
//            ArrayList<String> listMaPKInTable = new ArrayList<>();
            String[] maPKInTable = tblKh.getValueAt(rowSelected(), 10).toString().split(",");
            for (int i = 0; i < maPKInTable.length; i++) {
//            for (int j = 0; j < editHD.convertLoaiPKToMaLoaiPK((DefaultListModel) jList2.getModel()).size(); j++) {
                if (soSanhMaPK(maPKInTable, editHD.convertLoaiPKToMaLoaiPK((DefaultListModel) jList2.getModel()), i)) {
                    System.out.println("pk cancel: " + i + " " + maPKInTable[i].trim());
                    pstm.setString(2, maPKInTable[i].trim());
                    pstm.executeUpdate();
                }
//            }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

//        System.out.println("list in table Array: " + listMaPKInTable);
    }

    private boolean soSanhMaPK(String[] maPKInTable, ArrayList maPKInJlist, int i) {
        boolean kq = true;
//        for (int i = 0; i < maPKInTable.length; i++) {
        for (int j = 0; j < maPKInJlist.size(); j++) {
//                System.out.println("PK in table"+i+" so sanh: "+maPKInTable[i].trim());
//                System.out.println("PK in list"+j+" so sanh: "+maPKInJlist.get(j).toString());
            if (maPKInTable[i].trim().equals(maPKInJlist.get(j).toString())) {
                kq = false;
                break;
            }

        }
//        }
        return kq;
    }

    private void btnResetActionPerformed(ActionEvent evt) {
        txtMaHD.setText("");
        cbxSoCMND.setSelectedIndex(0);
        dpkNgayLap.setDate(Calendar.getInstance().getTime());
        dpkTimeBatDauHD.setDate(Calendar.getInstance().getTime());
        dpkTimeKetThucHD.setDate(Calendar.getInstance().getTime());
        txtDiemNhanXe.setText("");
        txtDiemTraXe.setText("");
        tareaGhiChu.setText("");
        cbxTinhTrangHD.setSelectedIndex(0);
        cbxMaLoaiXe.setSelectedIndex(0);
//        jList1.removeAll();
        jList2.removeAll();
        cbxDatCoc.setSelectedIndex(0);
        txtMaTT.setText("");
        txtTienThueXe.setText("");
        txtTienSuaChua.setText("");
        txtTongTien.setText("");
    }

//    private void tinhTien() {
//        java.util.Date utilDate2 = dpkTimeBatDauHD.getDate();
//        java.sql.Date timeBatDauHD = new java.sql.Date(utilDate2.getTime());
//        java.util.Date utilDate3 = dpkTimeKetThucHD.getDate();
//        java.sql.Date timeKetThucHD = new java.sql.Date(utilDate3.getTime());
//        LocalDate bd = LocalDate.parse(timeBatDauHD.toString(), DateTimeFormatter.ISO_LOCAL_DATE);
//        LocalDate kt = LocalDate.parse(timeKetThucHD.toString(), DateTimeFormatter.ISO_LOCAL_DATE);
//        Duration truBDKT = Duration.between(bd.atStartOfDay(), kt.atStartOfDay());
//        long tienThueXe = 0, giaThueXeNgay = 0, tongTien = 0;
//        editHopDongDao editHD = new editHopDongDao();
//        try {
//            String sql = "select top 1 GiaThueXeTheoNgay from Xe where MaLoaiXe = ?";
//            Connection con = databaseHelper.openConnection();
//            PreparedStatement pstm = con.prepareStatement(sql);
//            pstm.setString(1, editHD.convertLoaiXeToMaLoaiXe(cbxMaLoaiXe.getSelectedItem().toString()));
//            ResultSet rs = pstm.executeQuery();
//            while (rs.next()) {
//                giaThueXeNgay = rs.getLong(1);
//            }
//            if (!dpkTimeKetThucHD.getDate().toString().isEmpty()) {
//                tienThueXe = (truBDKT.toDays() + 1) * giaThueXeNgay;
//            }
//        } catch (Exception e) {
//            e.printStackTrace();
//        }
//
//        txtTienThueXe.setText(String.valueOf(tienThueXe));
//        txtTienSuaChua.setText(String.valueOf(tienThueXe + Integer.parseInt(txtTienSuaChua.getText())));
//    }
}
